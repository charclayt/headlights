# Base Docker Compose file, override for local development or production deployment

services:
  db:
    image: mysql:8.4
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    command: --pid-file=/var/run/mysql/mysqld.pid
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok-tunnel
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    command: http django-web:8000
    ports:
      - "4040:4040"
    depends_on:
      - django-web
    networks:
      - app-network

  django-web:
    container_name: django-docker
    depends_on:
      db:
        condition: service_healthy
      ml-service:
        condition: service_started
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DATABASE_ENGINE: "django.db.backends.mysql"
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      ML_SERVICE_URL: "http://ml-service:8001"
      PYTHONPATH: /app
    volumes:
      - .:/app
      - media:/app/media
      - static:/app/static
      - ./templates:/app/templates
    restart: always
    env_file:
      - .env
    networks:
      - app-network

  ml-service:
    container_name: ml-service
    depends_on:
      db:
        condition: service_healthy
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_ALLOWED_HOSTS: "localhost,ml-service,django-docker"
      DATABASE_ENGINE: "django.db.backends.mysql"
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      PYTHONPATH: /app
    volumes:
      - ./ml_project:/app
      - media:/shared/media
      - static:/shared/static
      - ./templates:/shared/templates
    restart: always
    env_file:
      - .env
    networks:
      - app-network

volumes:
  mysql_data:
  static:
  media:

networks:
  app-network:
    driver: bridge
